// <auto-generated />
using System;
using HospitalApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitalApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240902085325_algo2")]
    partial class algo2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HospitalAPI.Models.Consulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EpisodiMedicId")
                        .HasColumnType("int");

                    b.Property<string>("PersonalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Recepta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sintomatologia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Urgencia")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EpisodiMedicId");

                    b.HasIndex("PersonalId");

                    b.ToTable("Consultes");
                });

            modelBuilder.Entity("HospitalAPI.Models.EpisodiMedic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataObertura")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataTancament")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dolencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PacientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PacientId");

                    b.ToTable("EpisodisMedics");
                });

            modelBuilder.Entity("HospitalAPI.Models.Habitacio", b =>
                {
                    b.Property<int>("CodiHabitacio")
                        .HasColumnType("int");

                    b.Property<int>("CapacitatLlits")
                        .HasColumnType("int");

                    b.Property<int>("PlantaId")
                        .HasColumnType("int");

                    b.HasKey("CodiHabitacio");

                    b.HasIndex("PlantaId");

                    b.ToTable("Habitacions");
                });

            modelBuilder.Entity("HospitalAPI.Models.Ingres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataSortida")
                        .HasColumnType("datetime2");

                    b.Property<int>("EpisodiMedicId")
                        .HasColumnType("int");

                    b.Property<string>("LlitId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("EpisodiMedicId");

                    b.HasIndex("LlitId");

                    b.ToTable("Ingressos");
                });

            modelBuilder.Entity("HospitalAPI.Models.Llit", b =>
                {
                    b.Property<string>("CodiLlit")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("ForaDeServei")
                        .HasColumnType("bit");

                    b.Property<int>("HabitacioId")
                        .HasColumnType("int");

                    b.Property<bool>("Ocupat")
                        .HasColumnType("bit");

                    b.HasKey("CodiLlit");

                    b.HasIndex("HabitacioId");

                    b.ToTable("Llits");
                });

            modelBuilder.Entity("HospitalAPI.Models.Pacient", b =>
                {
                    b.Property<string>("DNI")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumSS")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Sexe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DNI");

                    b.HasIndex("NumSS")
                        .IsUnique();

                    b.ToTable("Pacients");
                });

            modelBuilder.Entity("HospitalAPI.Models.Personal", b =>
                {
                    b.Property<string>("DNI")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Especialitat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DNI");

                    b.ToTable("Personals");
                });

            modelBuilder.Entity("HospitalAPI.Models.Planta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CapacitatHabitacions")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Plantes");
                });

            modelBuilder.Entity("HospitalAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HospitalAPI.Models.Consulta", b =>
                {
                    b.HasOne("HospitalAPI.Models.EpisodiMedic", "EpisodiMedic")
                        .WithMany("Consultes")
                        .HasForeignKey("EpisodiMedicId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HospitalAPI.Models.Personal", "Personal")
                        .WithMany("Consultes")
                        .HasForeignKey("PersonalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EpisodiMedic");

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("HospitalAPI.Models.EpisodiMedic", b =>
                {
                    b.HasOne("HospitalAPI.Models.Pacient", "Pacient")
                        .WithMany("EpisodisMedics")
                        .HasForeignKey("PacientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pacient");
                });

            modelBuilder.Entity("HospitalAPI.Models.Habitacio", b =>
                {
                    b.HasOne("HospitalAPI.Models.Planta", "Planta")
                        .WithMany("Habitacions")
                        .HasForeignKey("PlantaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Planta");
                });

            modelBuilder.Entity("HospitalAPI.Models.Ingres", b =>
                {
                    b.HasOne("HospitalAPI.Models.EpisodiMedic", "EpisodiMedic")
                        .WithMany("Ingressos")
                        .HasForeignKey("EpisodiMedicId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HospitalAPI.Models.Llit", "Llit")
                        .WithMany("Ingressos")
                        .HasForeignKey("LlitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EpisodiMedic");

                    b.Navigation("Llit");
                });

            modelBuilder.Entity("HospitalAPI.Models.Llit", b =>
                {
                    b.HasOne("HospitalAPI.Models.Habitacio", "Habitacio")
                        .WithMany("Llits")
                        .HasForeignKey("HabitacioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Habitacio");
                });

            modelBuilder.Entity("HospitalAPI.Models.EpisodiMedic", b =>
                {
                    b.Navigation("Consultes");

                    b.Navigation("Ingressos");
                });

            modelBuilder.Entity("HospitalAPI.Models.Habitacio", b =>
                {
                    b.Navigation("Llits");
                });

            modelBuilder.Entity("HospitalAPI.Models.Llit", b =>
                {
                    b.Navigation("Ingressos");
                });

            modelBuilder.Entity("HospitalAPI.Models.Pacient", b =>
                {
                    b.Navigation("EpisodisMedics");
                });

            modelBuilder.Entity("HospitalAPI.Models.Personal", b =>
                {
                    b.Navigation("Consultes");
                });

            modelBuilder.Entity("HospitalAPI.Models.Planta", b =>
                {
                    b.Navigation("Habitacions");
                });
#pragma warning restore 612, 618
        }
    }
}
