// <auto-generated />
using System;
using HospitalXD.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitalXD.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HospitalXD.Models.Consulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dolencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EpisodiMedicId")
                        .HasColumnType("int");

                    b.Property<int?>("EpisodiMedicId1")
                        .HasColumnType("int");

                    b.Property<int>("MetgeId")
                        .HasColumnType("int");

                    b.Property<int?>("MetgeId1")
                        .HasColumnType("int");

                    b.Property<int>("PacientId")
                        .HasColumnType("int");

                    b.Property<int?>("PacientId1")
                        .HasColumnType("int");

                    b.Property<string>("Recepta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Urgencia")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EpisodiMedicId");

                    b.HasIndex("EpisodiMedicId1");

                    b.HasIndex("MetgeId");

                    b.HasIndex("MetgeId1");

                    b.HasIndex("PacientId");

                    b.HasIndex("PacientId1");

                    b.ToTable("Consultes");
                });

            modelBuilder.Entity("HospitalXD.Models.EpisodiMedic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("PacientId")
                        .HasColumnType("int");

                    b.Property<int?>("PacientId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PacientId");

                    b.HasIndex("PacientId1");

                    b.ToTable("EpisodisMedics");
                });

            modelBuilder.Entity("HospitalXD.Models.Habitacio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacitat")
                        .HasColumnType("int");

                    b.Property<int>("Num_llits")
                        .HasColumnType("int");

                    b.Property<int>("PlantaId")
                        .HasColumnType("int");

                    b.Property<int?>("PlantaId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlantaId");

                    b.HasIndex("PlantaId1");

                    b.ToTable("Habitacions");
                });

            modelBuilder.Entity("HospitalXD.Models.Ingres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataSortida")
                        .HasColumnType("datetime2");

                    b.Property<int>("EpisodiMedicId")
                        .HasColumnType("int");

                    b.Property<int?>("EpisodiMedicId1")
                        .HasColumnType("int");

                    b.Property<int>("LlitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EpisodiMedicId");

                    b.HasIndex("EpisodiMedicId1");

                    b.HasIndex("LlitId");

                    b.ToTable("Ingressos");
                });

            modelBuilder.Entity("HospitalXD.Models.Llit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HabitacioId")
                        .HasColumnType("int");

                    b.Property<int?>("HabitacioId1")
                        .HasColumnType("int");

                    b.Property<bool>("Ocupat")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("HabitacioId");

                    b.HasIndex("HabitacioId1");

                    b.ToTable("Llits");
                });

            modelBuilder.Entity("HospitalXD.Models.Metge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especialitat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Metges");
                });

            modelBuilder.Entity("HospitalXD.Models.Pacient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumSS")
                        .HasColumnType("int");

                    b.Property<string>("Sexe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pacients");
                });

            modelBuilder.Entity("HospitalXD.Models.Planta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NumHabs")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Plantes");
                });

            modelBuilder.Entity("HospitalXD.Models.Consulta", b =>
                {
                    b.HasOne("HospitalXD.Models.EpisodiMedic", "EpisodiMedic")
                        .WithMany()
                        .HasForeignKey("EpisodiMedicId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HospitalXD.Models.EpisodiMedic", null)
                        .WithMany("Consultes")
                        .HasForeignKey("EpisodiMedicId1");

                    b.HasOne("HospitalXD.Models.Metge", "Metge")
                        .WithMany()
                        .HasForeignKey("MetgeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HospitalXD.Models.Metge", null)
                        .WithMany("Consultes")
                        .HasForeignKey("MetgeId1");

                    b.HasOne("HospitalXD.Models.Pacient", "Pacient")
                        .WithMany()
                        .HasForeignKey("PacientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HospitalXD.Models.Pacient", null)
                        .WithMany("Consultes")
                        .HasForeignKey("PacientId1");

                    b.Navigation("EpisodiMedic");

                    b.Navigation("Metge");

                    b.Navigation("Pacient");
                });

            modelBuilder.Entity("HospitalXD.Models.EpisodiMedic", b =>
                {
                    b.HasOne("HospitalXD.Models.Pacient", "Pacient")
                        .WithMany()
                        .HasForeignKey("PacientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HospitalXD.Models.Pacient", null)
                        .WithMany("EpisodiMedic")
                        .HasForeignKey("PacientId1");

                    b.Navigation("Pacient");
                });

            modelBuilder.Entity("HospitalXD.Models.Habitacio", b =>
                {
                    b.HasOne("HospitalXD.Models.Planta", "Planta")
                        .WithMany()
                        .HasForeignKey("PlantaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HospitalXD.Models.Planta", null)
                        .WithMany("Habitacions")
                        .HasForeignKey("PlantaId1");

                    b.Navigation("Planta");
                });

            modelBuilder.Entity("HospitalXD.Models.Ingres", b =>
                {
                    b.HasOne("HospitalXD.Models.EpisodiMedic", "EpisodiMedic")
                        .WithMany()
                        .HasForeignKey("EpisodiMedicId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HospitalXD.Models.EpisodiMedic", null)
                        .WithMany("Ingressos")
                        .HasForeignKey("EpisodiMedicId1");

                    b.HasOne("HospitalXD.Models.Llit", "Llit")
                        .WithMany()
                        .HasForeignKey("LlitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EpisodiMedic");

                    b.Navigation("Llit");
                });

            modelBuilder.Entity("HospitalXD.Models.Llit", b =>
                {
                    b.HasOne("HospitalXD.Models.Habitacio", "Habitacio")
                        .WithMany()
                        .HasForeignKey("HabitacioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HospitalXD.Models.Habitacio", null)
                        .WithMany("Llits")
                        .HasForeignKey("HabitacioId1");

                    b.Navigation("Habitacio");
                });

            modelBuilder.Entity("HospitalXD.Models.EpisodiMedic", b =>
                {
                    b.Navigation("Consultes");

                    b.Navigation("Ingressos");
                });

            modelBuilder.Entity("HospitalXD.Models.Habitacio", b =>
                {
                    b.Navigation("Llits");
                });

            modelBuilder.Entity("HospitalXD.Models.Metge", b =>
                {
                    b.Navigation("Consultes");
                });

            modelBuilder.Entity("HospitalXD.Models.Pacient", b =>
                {
                    b.Navigation("Consultes");

                    b.Navigation("EpisodiMedic");
                });

            modelBuilder.Entity("HospitalXD.Models.Planta", b =>
                {
                    b.Navigation("Habitacions");
                });
#pragma warning restore 612, 618
        }
    }
}
